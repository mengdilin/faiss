<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structfaiss_1_1VectorDistance" kind="struct" language="C++" prot="public">
    <compoundname>faiss::VectorDistance</compoundname>
    <templateparamlist>
      <param>
        <type><ref refid="namespacefaiss_1afd12191c638da74760ff397cf319752c" kindref="member">MetricType</ref></type>
        <declname>mt</declname>
        <defname>mt</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structfaiss_1_1VectorDistance_1a61c9d5400239ae177d94be5e119c3fe0" prot="public" static="no">
        <type>typename std::conditional&lt; <ref refid="namespacefaiss_1ac27fd187a128dba0bf95196458a7fbd7" kindref="member">is_similarity_metric</ref>(mt), <ref refid="structfaiss_1_1CMin" kindref="compound">CMin</ref>&lt; float, int64_t &gt;, <ref refid="structfaiss_1_1CMax" kindref="compound">CMax</ref>&lt; float, int64_t &gt; &gt;::type</type>
        <definition>using faiss::VectorDistance&lt; mt &gt;::C =  typename std::conditional&lt; is_similarity_metric(mt), CMin&lt;float, int64_t&gt;, CMax&lt;float, int64_t&gt; &gt;::type</definition>
        <argsstring></argsstring>
        <name>C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/extra_distances-inl.h" line="27" column="5" bodyfile="faiss/utils/extra_distances-inl.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfaiss_1_1VectorDistance_1a9d03eabc89b6e631ba45ec79700e6534" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t faiss::VectorDistance&lt; mt &gt;::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/extra_distances-inl.h" line="20" column="12" bodyfile="faiss/utils/extra_distances-inl.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1VectorDistance_1ab79751e034e79559d9585cf68af061a3" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float faiss::VectorDistance&lt; mt &gt;::metric_arg</definition>
        <argsstring></argsstring>
        <name>metric_arg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/extra_distances-inl.h" line="21" column="11" bodyfile="faiss/utils/extra_distances-inl.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="structfaiss_1_1VectorDistance_1ad9bd4b2e4a39ce28f9c3ba0f1308410e" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr bool</type>
        <definition>constexpr bool faiss::VectorDistance&lt; mt &gt;::is_similarity</definition>
        <argsstring></argsstring>
        <name>is_similarity</name>
        <initializer>= <ref refid="namespacefaiss_1ac27fd187a128dba0bf95196458a7fbd7" kindref="member">is_similarity_metric</ref>(mt)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/extra_distances-inl.h" line="22" column="27" bodyfile="faiss/utils/extra_distances-inl.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structfaiss_1_1VectorDistance_1aaf62cc689beb7e6fb78a27ff2a8ed598" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float faiss::VectorDistance&lt; mt &gt;::operator()</definition>
        <argsstring>(const float *x, const float *y) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/extra_distances-inl.h" line="24" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1VectorDistance_1a407dedbd401cfd90eb673fcc39e82b9d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float faiss::VectorDistance&lt; METRIC_L2 &gt;::operator()</definition>
        <argsstring>(const float *x, const float *y) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/extra_distances-inl.h" line="34" column="29" bodyfile="faiss/utils/extra_distances-inl.h" bodystart="34" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1VectorDistance_1a896326422abd4f2c051a1acdd2609cce" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float faiss::VectorDistance&lt; METRIC_INNER_PRODUCT &gt;::operator()</definition>
        <argsstring>(const float *x, const float *y) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/extra_distances-inl.h" line="41" column="29" bodyfile="faiss/utils/extra_distances-inl.h" bodystart="41" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1VectorDistance_1a58f56c4301d83efb4128141d2a2d2434" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float faiss::VectorDistance&lt; METRIC_L1 &gt;::operator()</definition>
        <argsstring>(const float *x, const float *y) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/extra_distances-inl.h" line="48" column="29" bodyfile="faiss/utils/extra_distances-inl.h" bodystart="48" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1VectorDistance_1a35661cd45b48a052438bb114d07302bb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float faiss::VectorDistance&lt; METRIC_Linf &gt;::operator()</definition>
        <argsstring>(const float *x, const float *y) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/extra_distances-inl.h" line="55" column="29" bodyfile="faiss/utils/extra_distances-inl.h" bodystart="55" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1VectorDistance_1a50c11a08383240edec8041eb5c8e1d56" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float faiss::VectorDistance&lt; METRIC_Lp &gt;::operator()</definition>
        <argsstring>(const float *x, const float *y) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/extra_distances-inl.h" line="69" column="29" bodyfile="faiss/utils/extra_distances-inl.h" bodystart="69" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1VectorDistance_1a61f5efc242a32963a943474513ba949d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float faiss::VectorDistance&lt; METRIC_Canberra &gt;::operator()</definition>
        <argsstring>(const float *x, const float *y) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/extra_distances-inl.h" line="81" column="29" bodyfile="faiss/utils/extra_distances-inl.h" bodystart="81" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1VectorDistance_1ab49171beb2af4d96617a22f507381518" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float faiss::VectorDistance&lt; METRIC_BrayCurtis &gt;::operator()</definition>
        <argsstring>(const float *x, const float *y) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/extra_distances-inl.h" line="93" column="29" bodyfile="faiss/utils/extra_distances-inl.h" bodystart="93" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1VectorDistance_1ac839930aa4b3c1db70146b54212385d6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float faiss::VectorDistance&lt; METRIC_JensenShannon &gt;::operator()</definition>
        <argsstring>(const float *x, const float *y) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/extra_distances-inl.h" line="106" column="29" bodyfile="faiss/utils/extra_distances-inl.h" bodystart="106" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1VectorDistance_1abcb39e66cd757963c21107996bad3dad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float faiss::VectorDistance&lt; METRIC_Jaccard &gt;::operator()</definition>
        <argsstring>(const float *x, const float *y) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/extra_distances-inl.h" line="121" column="29" bodyfile="faiss/utils/extra_distances-inl.h" bodystart="121" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1VectorDistance_1a1523b33f2aa08df81f83f43eee34d862" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float faiss::VectorDistance&lt; METRIC_NaNEuclidean &gt;::operator()</definition>
        <argsstring>(const float *x, const float *y) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/extra_distances-inl.h" line="135" column="29" bodyfile="faiss/utils/extra_distances-inl.h" bodystart="135" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1VectorDistance_1a5ae7f94d000b8bf75f1a27d99dd78148" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float faiss::VectorDistance&lt; METRIC_ABS_INNER_PRODUCT &gt;::operator()</definition>
        <argsstring>(const float *x, const float *y) const</argsstring>
        <name>operator()</name>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/extra_distances-inl.h" line="155" column="29" bodyfile="faiss/utils/extra_distances-inl.h" bodystart="155" bodyend="163"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="faiss/utils/extra_distances-inl.h" line="19" column="1" bodyfile="faiss/utils/extra_distances-inl.h" bodystart="19" bodyend="31"/>
    <listofallmembers>
      <member refid="structfaiss_1_1VectorDistance_1a61c9d5400239ae177d94be5e119c3fe0" prot="public" virt="non-virtual"><scope>faiss::VectorDistance</scope><name>C</name></member>
      <member refid="structfaiss_1_1VectorDistance_1a9d03eabc89b6e631ba45ec79700e6534" prot="public" virt="non-virtual"><scope>faiss::VectorDistance</scope><name>d</name></member>
      <member refid="structfaiss_1_1VectorDistance_1ad9bd4b2e4a39ce28f9c3ba0f1308410e" prot="public" virt="non-virtual"><scope>faiss::VectorDistance</scope><name>is_similarity</name></member>
      <member refid="structfaiss_1_1VectorDistance_1ab79751e034e79559d9585cf68af061a3" prot="public" virt="non-virtual"><scope>faiss::VectorDistance</scope><name>metric_arg</name></member>
      <member refid="structfaiss_1_1VectorDistance_1aaf62cc689beb7e6fb78a27ff2a8ed598" prot="public" virt="non-virtual"><scope>faiss::VectorDistance</scope><name>operator()</name></member>
      <member refid="structfaiss_1_1VectorDistance_1a407dedbd401cfd90eb673fcc39e82b9d" prot="public" virt="non-virtual"><scope>faiss::VectorDistance</scope><name>operator()</name></member>
      <member refid="structfaiss_1_1VectorDistance_1a896326422abd4f2c051a1acdd2609cce" prot="public" virt="non-virtual"><scope>faiss::VectorDistance</scope><name>operator()</name></member>
      <member refid="structfaiss_1_1VectorDistance_1a58f56c4301d83efb4128141d2a2d2434" prot="public" virt="non-virtual"><scope>faiss::VectorDistance</scope><name>operator()</name></member>
      <member refid="structfaiss_1_1VectorDistance_1a35661cd45b48a052438bb114d07302bb" prot="public" virt="non-virtual"><scope>faiss::VectorDistance</scope><name>operator()</name></member>
      <member refid="structfaiss_1_1VectorDistance_1a50c11a08383240edec8041eb5c8e1d56" prot="public" virt="non-virtual"><scope>faiss::VectorDistance</scope><name>operator()</name></member>
      <member refid="structfaiss_1_1VectorDistance_1a61f5efc242a32963a943474513ba949d" prot="public" virt="non-virtual"><scope>faiss::VectorDistance</scope><name>operator()</name></member>
      <member refid="structfaiss_1_1VectorDistance_1ab49171beb2af4d96617a22f507381518" prot="public" virt="non-virtual"><scope>faiss::VectorDistance</scope><name>operator()</name></member>
      <member refid="structfaiss_1_1VectorDistance_1ac839930aa4b3c1db70146b54212385d6" prot="public" virt="non-virtual"><scope>faiss::VectorDistance</scope><name>operator()</name></member>
      <member refid="structfaiss_1_1VectorDistance_1abcb39e66cd757963c21107996bad3dad" prot="public" virt="non-virtual"><scope>faiss::VectorDistance</scope><name>operator()</name></member>
      <member refid="structfaiss_1_1VectorDistance_1a1523b33f2aa08df81f83f43eee34d862" prot="public" virt="non-virtual"><scope>faiss::VectorDistance</scope><name>operator()</name></member>
      <member refid="structfaiss_1_1VectorDistance_1a5ae7f94d000b8bf75f1a27d99dd78148" prot="public" virt="non-virtual"><scope>faiss::VectorDistance</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
